==========================================================================
                CYT300 CAPSTONE PROJECT: SECURITY IN BIG DATA
                                  GROUP 2
                            IMPLEMENTATION PART 1
==========================================================================


Update the system
sudo apt update

Install Java
sudo apt install openjdk-8-jdk -y

Test Java
java -version

Install OpenSSH
sudo apt install openssh-server openssh-client -y

Create Non-Root User
sudo adduser hdoop

Login as hdoop
su - hdoop

Setup Password-less OpenSSH
ssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa
cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
chmod 0600 ~/.ssh/authorized_keys

Download Hadoop
wget https://muug.ca/mirror/apache-dist/hadoop/common/hadoop-3.3.1/hadoop-3.3.1.tar.gz

Extract Hadoop
tar xzf hadoop-3.3.1.tar.gz

Edit Bashrc file and add the following:

    #Hadoop Related Options
    export HADOOP_HOME=/home/hdoop/hadoop-3.3.1
    export HADOOP_INSTALL=$HADOOP_HOME
    export HADOOP_MAPRED_HOME=$HADOOP_HOME
    export HADOOP_COMMON_HOME=$HADOOP_HOME
    export HADOOP_HDFS_HOME=$HADOOP_HOME
    export YARN_HOME=$HADOOP_HOME
    export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
    export PATH=$PATH:$HADOOP_HOME/sbin:$HADOOP_HOME/bin
    export HADOOP_OPTS"-Djava.library.path=$HADOOP_HOME/lib/native"

    Restart Bashrc
    source ~/.bashrc


Hadoop Configuration


Edit hadoop-env.sh file
    sudo nano $HADOOP_HOME/etc/hadoop/hadoop-env.sh

    add the following
    export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64

Edit core-site.xml

sudo nano $HADOOP_HOME/etc/hadoop/core-site.xml

Add the following Configuration:
<configuration>
<property>
  <name>hadoop.tmp.dir</name>
  <value>/home/hdoop/tmpdata</value>
</property>
<property>
  <name>fs.default.name</name>
  <value>hdfs://127.0.0.1:9000</value>
</property>
</configuration>


Edit hdfs-site.xml File
sudo nano $HADOOP_HOME/etc/hadoop/hdfs-site.xml

Add the following:

<configuration>
<property>
  <name>dfs.data.dir</name>
  <value>/home/hdoop/dfsdata/namenode</value>
</property>
<property>
  <name>dfs.data.dir</name>
  <value>/home/hdoop/dfsdata/datanode</value>
</property>
<property>
  <name>dfs.replication</name>
  <value>1</value>
</property>
</configuration>

Edit mapred-site.xml File
sudo nano $HADOOP_HOME/etc/hadoop/mapred-site.xml

Add the following:

<configuration> 
<property> 
  <name>mapreduce.framework.name</name> 
  <value>yarn</value> 
</property> 
</configuration>

Edit yarn-site.xml File
The yarn-site.xml file is used to define settings relevant to YARN. It contains configurations for the Node Manager, Resource Manager, Containers, and Application Master.

Open the yarn-site.xml file in a text editor:
sudo nano $HADOOP_HOME/etc/hadoop/yarn-site.xml
Append the following configuration:

<configuration>
<property>
  <name>yarn.nodemanager.aux-services</name>
  <value>mapreduce_shuffle</value>
</property>
<property>
  <name>yarn.nodemanager.aux-services.mapreduce.shuffle.class</name>
  <value>org.apache.hadoop.mapred.ShuffleHandler</value>
</property>
<property>
  <name>yarn.resourcemanager.hostname</name>
  <value>127.0.0.1</value>
</property>
<property>
  <name>yarn.acl.enable</name>
  <value>0</value>
</property>
<property>
  <name>yarn.nodemanager.env-whitelist</name>   
  <value>JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PERPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME</value>
</property>
</configuration>


Lets setup file permissions before testing
chown hdoop:hdoop hadoop-3.3.1
chmod 770 hadoop-3.3.1

Format HDFS namenode
hdfs namenode -format


Start and test Hadoop
start-dfs.sh
start-yarn.sh
jps


Access Hadoop on Browser
http://localhost:9870


==========================================================================
                      END OF IMPLEMENTATION PART 1
==========================================================================
