
//This script is retrieved from https://www.learningjournal.guru/courses/spark/spark-foundation-training/spark-cassandra-connector/


//Connect to Cassandra using the cqlsh client.
cqlsh

//Execute a CQL statement to test if Cassandra cluster is up and running.
SELECT cluster_name, listen_address FROM system.local;

//Create a Keyspace using below CQL command.
create KEYSPACE sparkdb WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};

//Create a Cassandra table.
create table sparkdb.survey_results( gender text, sum_yes int, sum_no int, primary key (gender)); 

//Test the table.
select * from sparkdb.survey_results;  

//How to write Spark data frame to Cassandra table
spark-shell --packages com.datastax.spark:spark-cassandra-connector_2.12:3.1.0


//The next step is to create a data frame that holds some data. Then we can write that data frame to a Cassandra table. Let's create a data frame. Use following code to create a data frame.

//Read CSV into Data Frame
val df = spark.read
  .format("csv")
  .option("header", "true")
  .option("inferSchema", "true")
  .option("nullValue", "NA")
  .option("timestampFormat", "yyyy-MM-dd'T'HH:mm:ss")
  .option("mode", "failfast")
  .load("/home/hdoop/cyt300data.csv")

df.createOrReplaceTempView("survey_tbl")

val dfout = spark.sql(
  """select gender, sum(yes) sum_yes, sum(no) sum_no
                            from (select case when lower(trim(gender)) in ('male','m','male-ish','maile','mal','male (cis)',
                                                                            'make','male ','man','msle','mail','malr','cis man',
                                                                            'cis male') then 'Male' 
                                              when lower(trim(gender)) in ('cis female','f','female','woman','femake','female ',
                                                                            'cis-female/femme','female (cis)','femail') then 'Female'
                                              else 'Transgender' 
                                          end as gender,
                                          case when treatment == 'Yes' then 1 else 0 end as yes,
                                          case when treatment == 'No' then 1 else 0 end as no
                            from survey_tbl) 
                            where gender != 'Transgender'
                            group by gender"""
)


//Checking the data in Spark
dfout.show

//WRITING TO CASSANDRA

dfout.write
  .format("org.apache.spark.sql.cassandra")
  .mode("overwrite")
  .option("confirm.truncate", "true")
  .option("spark.cassandra.connection.host", "127.0.0.1")
  .option("spark.cassandra.connection.port", "9042")
  .option("keyspace", "sparkdb")
  .option("table", "survey_results")
  .save()


//READING FROM CASSANDRA

val df_read = spark.read
  .format("org.apache.spark.sql.cassandra")
  .option("spark.cassandra.connection.host", "127.0.0.1")
  .option("spark.cassandra.connection.port", "9042")
  .option("keyspace", "sparkdb")
  .option("table", "survey_results")
  .load()
df_read.show
